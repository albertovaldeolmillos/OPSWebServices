//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OPSMessages.WSObtenerImporteAnulacionGiropark {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="anulacionesBinding", Namespace="urn:anulaciones")]
    public partial class anulaciones : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback EsExpedienteAnulableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtenerImporteAnulacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AnularExpedienteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public anulaciones() {
            this.Url = global::OPSMessages.Properties.Settings.Default.OPS_Messages_1_2_1_1_WSObtenerImporteAnulacionGiropark_anulaciones;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event EsExpedienteAnulableCompletedEventHandler EsExpedienteAnulableCompleted;
        
        /// <remarks/>
        public event ObtenerImporteAnulacionCompletedEventHandler ObtenerImporteAnulacionCompleted;
        
        /// <remarks/>
        public event AnularExpedienteCompletedEventHandler AnularExpedienteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:anulaciones#EsExpedienteAnulable", RequestNamespace="urn:anulaciones", ResponseNamespace="urn:anulaciones")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int EsExpedienteAnulable(int CodigoPoblacion, string Expediente, string FechaParquimetro) {
            object[] results = this.Invoke("EsExpedienteAnulable", new object[] {
                        CodigoPoblacion,
                        Expediente,
                        FechaParquimetro});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEsExpedienteAnulable(int CodigoPoblacion, string Expediente, string FechaParquimetro, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EsExpedienteAnulable", new object[] {
                        CodigoPoblacion,
                        Expediente,
                        FechaParquimetro}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndEsExpedienteAnulable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void EsExpedienteAnulableAsync(int CodigoPoblacion, string Expediente, string FechaParquimetro) {
            this.EsExpedienteAnulableAsync(CodigoPoblacion, Expediente, FechaParquimetro, null);
        }
        
        /// <remarks/>
        public void EsExpedienteAnulableAsync(int CodigoPoblacion, string Expediente, string FechaParquimetro, object userState) {
            if ((this.EsExpedienteAnulableOperationCompleted == null)) {
                this.EsExpedienteAnulableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEsExpedienteAnulableOperationCompleted);
            }
            this.InvokeAsync("EsExpedienteAnulable", new object[] {
                        CodigoPoblacion,
                        Expediente,
                        FechaParquimetro}, this.EsExpedienteAnulableOperationCompleted, userState);
        }
        
        private void OnEsExpedienteAnulableOperationCompleted(object arg) {
            if ((this.EsExpedienteAnulableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EsExpedienteAnulableCompleted(this, new EsExpedienteAnulableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:anulaciones#ObtenerImporteAnulacion", RequestNamespace="urn:anulaciones", ResponseNamespace="urn:anulaciones")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int ObtenerImporteAnulacion(int CodigoPoblacion, string Expediente, string FechaParquimetro) {
            object[] results = this.Invoke("ObtenerImporteAnulacion", new object[] {
                        CodigoPoblacion,
                        Expediente,
                        FechaParquimetro});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginObtenerImporteAnulacion(int CodigoPoblacion, string Expediente, string FechaParquimetro, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ObtenerImporteAnulacion", new object[] {
                        CodigoPoblacion,
                        Expediente,
                        FechaParquimetro}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndObtenerImporteAnulacion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerImporteAnulacionAsync(int CodigoPoblacion, string Expediente, string FechaParquimetro) {
            this.ObtenerImporteAnulacionAsync(CodigoPoblacion, Expediente, FechaParquimetro, null);
        }
        
        /// <remarks/>
        public void ObtenerImporteAnulacionAsync(int CodigoPoblacion, string Expediente, string FechaParquimetro, object userState) {
            if ((this.ObtenerImporteAnulacionOperationCompleted == null)) {
                this.ObtenerImporteAnulacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerImporteAnulacionOperationCompleted);
            }
            this.InvokeAsync("ObtenerImporteAnulacion", new object[] {
                        CodigoPoblacion,
                        Expediente,
                        FechaParquimetro}, this.ObtenerImporteAnulacionOperationCompleted, userState);
        }
        
        private void OnObtenerImporteAnulacionOperationCompleted(object arg) {
            if ((this.ObtenerImporteAnulacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerImporteAnulacionCompleted(this, new ObtenerImporteAnulacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:anulaciones#AnularExpediente", RequestNamespace="urn:anulaciones", ResponseNamespace="urn:anulaciones")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public int AnularExpediente(int CodigoPoblacion, string Expediente, string FechaPago, int NumeroParquimetro, int NumeroTicketImpreso) {
            object[] results = this.Invoke("AnularExpediente", new object[] {
                        CodigoPoblacion,
                        Expediente,
                        FechaPago,
                        NumeroParquimetro,
                        NumeroTicketImpreso});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAnularExpediente(int CodigoPoblacion, string Expediente, string FechaPago, int NumeroParquimetro, int NumeroTicketImpreso, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AnularExpediente", new object[] {
                        CodigoPoblacion,
                        Expediente,
                        FechaPago,
                        NumeroParquimetro,
                        NumeroTicketImpreso}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAnularExpediente(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AnularExpedienteAsync(int CodigoPoblacion, string Expediente, string FechaPago, int NumeroParquimetro, int NumeroTicketImpreso) {
            this.AnularExpedienteAsync(CodigoPoblacion, Expediente, FechaPago, NumeroParquimetro, NumeroTicketImpreso, null);
        }
        
        /// <remarks/>
        public void AnularExpedienteAsync(int CodigoPoblacion, string Expediente, string FechaPago, int NumeroParquimetro, int NumeroTicketImpreso, object userState) {
            if ((this.AnularExpedienteOperationCompleted == null)) {
                this.AnularExpedienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAnularExpedienteOperationCompleted);
            }
            this.InvokeAsync("AnularExpediente", new object[] {
                        CodigoPoblacion,
                        Expediente,
                        FechaPago,
                        NumeroParquimetro,
                        NumeroTicketImpreso}, this.AnularExpedienteOperationCompleted, userState);
        }
        
        private void OnAnularExpedienteOperationCompleted(object arg) {
            if ((this.AnularExpedienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AnularExpedienteCompleted(this, new AnularExpedienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void EsExpedienteAnulableCompletedEventHandler(object sender, EsExpedienteAnulableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EsExpedienteAnulableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EsExpedienteAnulableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void ObtenerImporteAnulacionCompletedEventHandler(object sender, ObtenerImporteAnulacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerImporteAnulacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerImporteAnulacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void AnularExpedienteCompletedEventHandler(object sender, AnularExpedienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AnularExpedienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AnularExpedienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591